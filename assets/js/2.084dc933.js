(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{280:function(s,t,a){s.exports=a.p+"assets/img/stw_gc1.e8b641c7.png"},281:function(s,t,a){s.exports=a.p+"assets/img/stw_gc2.9700075b.png"},282:function(s,t,a){s.exports=a.p+"assets/img/stw_gc3.68fe6361.png"},283:function(s,t,a){s.exports=a.p+"assets/img/stw_gc4.68fe6361.png"},284:function(s,t,a){s.exports=a.p+"assets/img/三色标记1.7af4fe80.png"},285:function(s,t,a){s.exports=a.p+"assets/img/三色标记1.1.7a72b214.png"},286:function(s,t,a){s.exports=a.p+"assets/img/三色标记2.0da5709b.png"},287:function(s,t,a){s.exports=a.p+"assets/img/三色标记3.581a4d51.png"},288:function(s,t,a){s.exports=a.p+"assets/img/三色标记4.2b130373.png"},289:function(s,t,a){s.exports=a.p+"assets/img/三色标记4.1.bec0e233.png"},290:function(s,t,a){s.exports=a.p+"assets/img/三色标记5.a686117f.png"},291:function(s,t,a){s.exports=a.p+"assets/img/三色标记问题1.85084332.png"},292:function(s,t,a){s.exports=a.p+"assets/img/三色标记问题2.8ab5ba41.png"},293:function(s,t,a){s.exports=a.p+"assets/img/三色标记问题3.6fdf4336.png"},294:function(s,t,a){s.exports=a.p+"assets/img/三色标记问题4.927b6d70.png"},295:function(s,t,a){s.exports=a.p+"assets/img/三色标记问题5.9239f249.png"},296:function(s,t,a){s.exports=a.p+"assets/img/强三色不变式.07f6ddf8.png"},297:function(s,t,a){s.exports=a.p+"assets/img/弱三色不变式.5213917d.png"},298:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障1.db12b302.png"},299:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障2.b66f4678.png"},300:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障3.41570e00.png"},301:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障4.f2eacd5f.png"},302:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障5.b52cdafb.png"},303:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障6.a2d98b0f.png"},304:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障7.5430fcaf.png"},305:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障8.ec305c71.png"},306:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障9.25cb87ec.png"},307:function(s,t,a){s.exports=a.p+"assets/img/插入写屏障10.232b8149.png"},308:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障1.c60454ef.png"},309:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障2.df5d11eb.png"},310:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障3.930f6ab6.png"},311:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障4.0297b92e.png"},312:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障5.6fe8c0e1.png"},313:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障6.5924545d.png"},314:function(s,t,a){s.exports=a.p+"assets/img/删除写屏障7.c920da33.png"},315:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障1.f58dd96b.png"},316:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障2.67d5b1a4.png"},317:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障3.efb37452.png"},318:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障4.dbb0aa75.png"},319:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障5.65c1ab3e.png"},320:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障6.7c8a9f07.png"},321:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障7.0bafb740.png"},322:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障8.ddc283f4.png"},323:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障9.faca4626.png"},324:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障10.35c8666f.png"},325:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障11.00a51db5.png"},326:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障12.4f29c515.png"},327:function(s,t,a){s.exports=a.p+"assets/img/混合写屏障13.225e69e7.png"},406:function(s,t,a){"use strict";a.r(t);var e=a(10),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"gc-机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gc-机制"}},[s._v("#")]),s._v(" GC 机制")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.topgoer.cn/docs/golangxiuyang/golangxiuyang-1cmee076rjgk7#anh6dl",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考地鼠文档"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_1-go-v1-3之前的标记-清除-mark-and-sweep-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-go-v1-3之前的标记-清除-mark-and-sweep-算法"}},[s._v("#")]),s._v(" 1. Go V1.3之前的标记-清除(mark and sweep)算法")]),s._v(" "),t("ul",[t("li",[s._v("标记(Mark phase)")]),s._v(" "),t("li",[s._v("清除(Sweep phase)")])]),s._v(" "),t("h4",{attrs:{id:"_1-1-stw-stop-the-word-基本流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-stw-stop-the-word-基本流程"}},[s._v("#")]),s._v(" 1.1 STW(stop the word)基本流程")]),s._v(" "),t("p",[t("strong",[s._v("mark and sweep算法在执行的时候，需要程序暂停")])]),s._v(" "),t("blockquote",[t("ol",[t("li",[s._v("暂停程序业务逻辑, 找出不可达的对象，然后做上标记。第二步，回收标记好的对象")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(280),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"2"}},[t("li",[s._v("开始标记，程序找出它所有可达的对象，并做上标记")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(281),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"3"}},[t("li",[s._v("标记完了之后，然后开始清除未标记的对象")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(282),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"4"}},[t("li",[s._v("停止暂停，让程序继续跑。然后循环重复这个过程，直到process程序生命周期结束")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(283),alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"_1-2-标记-清扫-mark-and-sweep-的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-标记-清扫-mark-and-sweep-的缺点"}},[s._v("#")]),s._v(" 1.2 标记-清扫(mark and sweep)的缺点")]),s._v(" "),t("ul",[t("li",[s._v("STW，stop the world；让程序暂停，程序出现卡顿 (重要问题)")]),s._v(" "),t("li",[s._v("标记需要扫描整个heap")]),s._v(" "),t("li",[s._v("清除数据会产生heap碎片")])]),s._v(" "),t("h3",{attrs:{id:"_2-go-v1-5的三色并发标记法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-go-v1-5的三色并发标记法"}},[s._v("#")]),s._v(" 2. Go V1.5的三色并发标记法")]),s._v(" "),t("p",[t("strong",[s._v("三色标记法 实际上就是通过三个阶段的标记来确定清楚的对象都有哪些")])]),s._v(" "),t("h4",{attrs:{id:"_2-1-三色标记法的基本流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-三色标记法的基本流程"}},[s._v("#")]),s._v(" 2.1 三色标记法的基本流程")]),s._v(" "),t("blockquote",[t("ol",[t("li",[s._v("新创建的对象,默认的颜色都是标记为“白色”")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(284),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(285),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"2"}},[t("li",[s._v("每次GC回收开始, 然后从根节点开始遍历所有对象，把遍历到的对象从白色集合放入“灰色”集合")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(286),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"3"}},[t("li",[s._v("遍历灰色集合，将灰色对象引用的对象从白色集合放入灰色集合，之后将此灰色对象放入黑色集合")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(287),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"4"}},[t("li",[s._v("复第三步, 直到灰色中无任何对象.")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(288),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(289),alt:"image"}})]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"5"}},[t("li",[s._v("回收所有的白色标记表的对象. 也就是回收垃圾")])])]),s._v(" "),t("p",[t("img",{attrs:{src:a(290),alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"_2-2-如果没有stw-stop-the-word-三色标记存在的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-如果没有stw-stop-the-word-三色标记存在的问题"}},[s._v("#")]),s._v(" 2.2 如果没有STW(stop the word)三色标记存在的问题？")]),s._v(" "),t("p",[t("img",{attrs:{src:a(291),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(292),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(293),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(294),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(295),alt:"image"}})]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("可以看出，有两个问题, 在三色标记法中,是不希望被发生的\n\n条件1: 一个白色对象被黑色对象引用(白色被挂在黑色下)\n条件2: 灰色对象与它之间的可达关系的白色对象遭到破坏(灰色同时丢了该白色)\n\n当以上两个条件同时满足时, 就会出现对象丢失现象\n如果上述中的白色对象3, 如果他还有很多下游对象的话, 也会一并都清理掉\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("为了防止这种现象的发生，最简单的方式就是STW，直接禁止掉其他用户程序对对象引用关系的干扰，但是"),t("strong",[s._v("STW的过程有明显的资源浪费，对所有的用户程序都有很大影响")]),s._v("，如何能在保证对象不丢失的情况下合理的尽可能的提高GC效率，减少STW时间呢？")])]),s._v(" "),t("h3",{attrs:{id:"_3-屏障机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-屏障机制"}},[s._v("#")]),s._v(" 3. 屏障机制")]),s._v(" "),t("h4",{attrs:{id:"_3-1-强-弱-三色不变式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-强-弱-三色不变式"}},[s._v("#")]),s._v(" 3.1 “强-弱” 三色不变式")]),s._v(" "),t("h5",{attrs:{id:"_3-1-1-强三色不变式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-强三色不变式"}},[s._v("#")]),s._v(" 3.1.1 强三色不变式")]),s._v(" "),t("blockquote",[t("p",[s._v("黑色对象不会指向白色对象，只能指向灰色或黑色对象")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(296),alt:"image"}})]),s._v(" "),t("h5",{attrs:{id:"_3-1-2-弱三色不变式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-弱三色不变式"}},[s._v("#")]),s._v(" 3.1.2 弱三色不变式")]),s._v(" "),t("blockquote",[t("p",[s._v("黑色对象可以指向白色对象，但此白色对象链路的上游中必须有一个灰色对象")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(297),alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"_3-2-插入写屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-插入写屏障"}},[s._v("#")]),s._v(" 3.2 插入写屏障")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("具体操作:")]),s._v(" 在A对象引用B对象的时候，B对象被标记为灰色。(将B挂在A下游，B必须被标记为灰色)")]),s._v(" "),t("p",[t("strong",[s._v("满足:")]),s._v(" 强三色不变式. (不存在黑色对象引用白色对象的情况了， 因为白色会强制变成灰色)")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(298),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(299),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(300),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(301),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(302),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(303),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(304),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(305),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(306),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(307),alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"_3-3-删除写屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-删除写屏障"}},[s._v("#")]),s._v(" 3.3 删除写屏障")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("具体操作:")]),s._v(" 被删除的对象，如果自身为灰色或者白色，那么被标记为灰色")]),s._v(" "),t("p",[t("strong",[s._v("满足:")]),s._v(" 弱三色不变式. (保护灰色对象到白色对象的路径不会断)")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(308),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(309),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(310),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(311),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(312),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(313),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(314),alt:"image"}})]),s._v(" "),t("h4",{attrs:{id:"_3-4-go-v1-8-混合写屏障机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-go-v1-8-混合写屏障机制"}},[s._v("#")]),s._v(" 3.4 Go V1.8 混合写屏障机制")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("插入写屏障和删除写屏障的短板：\n\n    插入写屏障：结束时需要STW来重新扫描栈，标记栈上引用的白色对象的存活；\n\n    删除写屏障：回收精度低，GC开始时STW扫描堆栈来记录初始快照，这个过程会保护开始时刻的所有存活对象。\n\nGo V1.8版本引入了混合写屏障机制（hybrid write barrier），避免了对栈re-scan的过程，极大的减少了STW的时间。结合了两者的优点。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("blockquote",[t("p",[s._v("混合写屏障规则")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("具体操作:\n\n1、GC开始将栈上的对象全部扫描并标记为黑色(之后不再进行第二次重复扫描，无需STW)，\n\n2、GC期间，任何在栈上创建的新对象，均为黑色。\n\n3、被删除的对象标记为灰色。\n\n4、被添加的对象标记为灰色。\n\n满足: 变形的弱三色不变式.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("合写屏障是Gc的一种屏障机制，所以只是当程序执行GC的时候，才会触发这种机制")])]),s._v(" "),t("blockquote",[t("p",[s._v("GC开始：扫描栈区，将可达对象全部标记为黑")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(315),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(316),alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("场景一： 对象被一个堆对象删除引用，成为栈对象的下游")])]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//前提：堆对象4->对象7 = 对象7；  //对象7 被 对象4引用")]),s._v("\n栈对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("；  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将堆对象7 挂在 栈对象1 下游")]),s._v("\n堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" null；    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对象4 删除引用 对象7")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:a(317),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(318),alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("对象被一个栈对象删除引用，成为另一个栈对象的下游")])]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("new")]),s._v(" 栈对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("；\n对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("；      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将栈对象3 挂在 栈对象9 下游")]),s._v("\n对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" null；      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对象2 删除引用 对象3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:a(319),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(320),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(321),alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("对象被一个堆对象删除引用，成为另一个堆对象的下游")])]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[s._v("堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("；       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将堆对象7 挂在 堆对象10 下游")]),s._v("\n堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" null；         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对象4 删除引用 对象7")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:a(322),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(323),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(324),alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("对象从一个栈对象删除引用，成为另一个堆对象的下游")])]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[s._v("堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("；       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将堆对象7 挂在 堆对象10 下游")]),s._v("\n堆对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("对象"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" null；         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对象4 删除引用 对象7")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:a(325),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(326),alt:"image"}})]),s._v(" "),t("p",[t("img",{attrs:{src:a(327),alt:"image"}})]),s._v(" "),t("blockquote",[t("p",[s._v("olang中的混合写屏障满足弱三色不变式，结合了删除写屏障和插入写屏障的优点，只需要在开始时并发扫描各个goroutine的栈，使其变黑并一直保持，这个过程不需要STW，而标记结束后，因为栈在扫描后始终是黑色的，也无需再进行re-scan操作了，减少了STW的时间")])]),s._v(" "),t("h4",{attrs:{id:"_3-5-对比总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-对比总结"}},[s._v("#")]),s._v(" 3.5 对比总结")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("GoV1.3- 普通标记清除法，整体过程需要启动STW，效率极低。")])]),s._v(" "),t("li",[t("p",[s._v("GoV1.5- 三色标记法， 堆空间启动写屏障，栈空间不启动，全部扫描之后，需要重新扫描一次栈(需要STW)，效率普通")])]),s._v(" "),t("li",[t("p",[s._v("GoV1.8-三色标记法，混合写屏障机制， 栈空间不启动，堆空间启动。整个过程几乎不需要STW，效率较高")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);